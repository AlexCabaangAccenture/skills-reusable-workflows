using CAT.App.D365.Service.Core.Models;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

namespace CAT.App.D365.Service.Core.Utilities
{
    public class ServiceBusMessageResponseConverter : JsonConverter<ServiceBusMessageResponse>
    {
        public override ServiceBusMessageResponse ReadJson(JsonReader reader, Type objectType, ServiceBusMessageResponse? existingValue, bool hasExistingValue, JsonSerializer serializer)
        {
            try
            {
                var jsonObject = JObject.Load(reader);
                var response = new ServiceBusMessageResponse
                {
                    BusinessEventId = jsonObject["BusinessEventId"]?.ToString(),
                    BusinessEventLegalEntity = jsonObject["BusinessEventLegalEntity"]?.ToString(),
                    ContextRecordSubject = jsonObject["ContextRecordSubject"]?.ToString(),
                    ControlNumber = jsonObject["ControlNumber"]?.ToString(),
                    curdoc = jsonObject["curdoc"]?.ToString(),
                    JournalName = jsonObject["doccode"]?.ToString() ?? jsonObject["JournalName"]?.ToString(),
                    linenumber = jsonObject["linenumber"]?.ToString(),
                    docdate = jsonObject["docdate"]?.ToString(),
                    docnum = jsonObject["docnum"]?.ToString(),
                    EventId = jsonObject["EventId"]?.ToString(),
                    EventTime = jsonObject["EventTime"]?.ToString(),
                    EventTimeIso8601 = jsonObject["EventTimeIso8601"]?.ToString(),
                    InitiatingUserAADObjectId = jsonObject["InitiatingUserAADObjectId"]?.ToString(),
                    Key = jsonObject["Key"]?.ToObject<Key>(serializer),
                    MajorVersion = jsonObject["MajorVersion"]?.ToObject<int?>(),
                    MinorVersion = jsonObject["MinorVersion"]?.ToObject<int?>(),
                    origdoccode = jsonObject["origdoccode"]?.ToString(),
                    origdocnum = jsonObject["origdocnum"]?.ToString(),
                    ParentContextRecordSubjects = jsonObject["ParentContextRecordSubjects"]?.ToObject<List<string>>(),
                    Reference1 = jsonObject["ref1"]?.ToString() ?? jsonObject["Reference1"]?.ToString(),
                    Reference2 = jsonObject["ref2"]?.ToString() ?? jsonObject["Reference2"]?.ToString(),
                    Reference3 = jsonObject["ref3"]?.ToString() ?? jsonObject["Reference3"]?.ToString(),
                    Reference4 = jsonObject["ref4"]?.ToString() ?? jsonObject["Reference4"]?.ToString(),
                    Reference5 = jsonObject["ref5"]?.ToString() ?? jsonObject["Reference5"]?.ToString(),
                    Reference6 = jsonObject["ref6"]?.ToString() ?? jsonObject["Reference6"]?.ToString(),
                    timestamp = jsonObject["timestamp"]?.ToString(),
                    username = jsonObject["username"]?.ToString(),
                    value = jsonObject["value"]?.ToObject<double?>() ?? jsonObject["Value"]?.ToObject<double?>(),
                    valuedoc = jsonObject["valuedoc"]?.ToObject<double?>() ?? jsonObject["Valuedoc"]?.ToObject<double?>(),
                    xref = jsonObject["xref"]?.ToString(),
                    xrefname = jsonObject["xrefname"]?.ToString()
                };
                return response;
            }
            catch (Exception Ex)
            {

                return null;
            }
        }

        public override void WriteJson(JsonWriter writer, ServiceBusMessageResponse? value, JsonSerializer serializer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("BusinessEventId");
            writer.WriteValue(value?.BusinessEventId);
            writer.WritePropertyName("BusinessEventLegalEntity");
            writer.WriteValue(value?.BusinessEventLegalEntity);
            writer.WritePropertyName("ContextRecordSubject");
            writer.WriteValue(value?.ContextRecordSubject);
            writer.WritePropertyName("ControlNumber");
            writer.WriteValue(value?.ControlNumber);
            writer.WritePropertyName("curdoc");
            writer.WriteValue(value?.curdoc);
            writer.WritePropertyName("doccode");
            writer.WriteValue(value?.JournalName);
            writer.WritePropertyName("linenumber");
            writer.WriteValue(value?.linenumber);
            writer.WritePropertyName("docdate");
            writer.WriteValue(value?.docdate);
            writer.WritePropertyName("docnum");
            writer.WriteValue(value?.docnum);
            writer.WritePropertyName("EventId");
            writer.WriteValue(value?.EventId);
            writer.WritePropertyName("EventTime");
            writer.WriteValue(value?.EventTime);
            writer.WritePropertyName("EventTimeIso8601");
            writer.WriteValue(value?.EventTimeIso8601);
            writer.WritePropertyName("InitiatingUserAADObjectId");
            writer.WriteValue(value?.InitiatingUserAADObjectId);

            if (value?.Key != null)
            {
                writer.WritePropertyName("Key");
                serializer.Serialize(writer, value?.Key);
            }

            writer.WritePropertyName("MajorVersion");
            writer.WriteValue(value?.MajorVersion);
            writer.WritePropertyName("MinorVersion");
            writer.WriteValue(value?.MinorVersion);
            writer.WritePropertyName("origdoccode");
            writer.WriteValue(value?.origdoccode);
            writer.WritePropertyName("origdocnum");
            writer.WriteValue(value?.origdocnum);

            if (value?.ParentContextRecordSubjects != null)
            {
                writer.WritePropertyName("ParentContextRecordSubjects");
                serializer.Serialize(writer, value?.ParentContextRecordSubjects);
            }

            writer.WritePropertyName("ref1");
            writer.WriteValue(value?.Reference1);
            writer.WritePropertyName("ref2");
            writer.WriteValue(value?.Reference2);
            writer.WritePropertyName("ref3");
            writer.WriteValue(value?.Reference3);
            writer.WritePropertyName("ref4");
            writer.WriteValue(value?.Reference4);
            writer.WritePropertyName("ref5");
            writer.WriteValue(value?.Reference5);
            writer.WritePropertyName("ref6");
            writer.WriteValue(value?.Reference6);
            writer.WritePropertyName("timestamp");
            writer.WriteValue(value?.timestamp);
            writer.WritePropertyName("username");
            writer.WriteValue(value?.username);
            writer.WritePropertyName("value");
            writer.WriteValue(value?.value);
            writer.WritePropertyName("valuedoc");
            writer.WriteValue(value?.valuedoc);
            writer.WritePropertyName("xref");
            writer.WriteValue(value?.xref);
            writer.WritePropertyName("xrefname");
            writer.WriteValue(value?.xrefname);
            writer.WriteEndObject();
        }
    }
}
